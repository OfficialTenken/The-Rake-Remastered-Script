--[[ good luck skiddy LOL --]]

do local _old_print, _old_warn = print, (warn or function() end); print = function() end; if warn then warn = function() end end; pcall(function() if type(os)=="table" and type(os.getenv)=="function" then local _old_getenv=os.getenv; os.getenv=function() return nil end end end) end
do pcall(function() if debug then debug.getinfo=nil;debug.getupvalue=nil;debug.setupvalue=nil;debug.setlocal=nil;debug.getlocal=nil;debug.getregistry=nil;debug.debug=nil end end);pcall(function() if getfenv then local e=getfenv(0);for k,v in pairs(e)do if type(v)=="function"and(k=="loadstring"or k=="load")then e[k]=function()return nil end end end end end) end
return(function(...)local rw={"\053\074\051\122\048\074\102\061","\102\070\111\073\110\118\077\098\106\074\112\065","\099\070\106\113\053\097\051\097\105\097\121\061","\099\084\111\086";"\102\113\103\108\105\050\082\065\100\112\086\054\081\097\080\088\048\108\082\061","\049\043\086\101\053\050\053\104\110\043\082\061";"\102\119\106\121\048\070\051\080\056\119\085\122\117\070\106\098","\056\074\111\115","\105\119\085\122\117\070\102\061","\116\070\104\088\056\074\111\115";"\077\106\103\056";"\077\106\103\056\100\120\111\121\117\070\104\054\110\118\101\061";"\099\119\086\088\081\097\111\075\048\121\061\061","\056\119\106\108\048\074\106\075\117\120\111\121\117\070\104\054\110\114\061\061";"\099\050\106\065\117\070\104\121\110\070\106\071\048\083\077\073\110\113\080\098","\077\106\103\056\102\113\106\065\053\097\103\088\081\097\111\075";"\102\070\051\122\079\097\106\108\056\097\077\067\053\097\056\061";"\102\070\051\122\079\097\106\108\102\074\106\068\110\119\053\073\110\074\048\061";"\077\106\103\056\100\070\080\054\117\070\102\061";"\116\097\105\114\079\097\111\072\100\070\053\073\110\074\056\114\105\097\080\067\100\070\053\073\048\074\102\114\105\116\086\074\110\070\112\108\053\116\086\118\117\097\115\114\117\113\122\073\110\070\102\114\053\074\051\122\048\074\102\114\053\119\106\075\100\120\106\099\102\043\086\073\048\108\086\054\110\084\121\114\053\070\106\122\105\119\077\073\117\074\112\088\053\116\086\088\081\070\102\114\053\050\103\121\100\070\112\075\053\043\086\119\105\097\104\088\100\070\112\084\110\119\106\088\100\055\120\114\110\097\104\075\117\050\077\104\100\070\053\054\048\084\086\088\081\070\102\114\077\106\103\056\100\083\103\069\048\074\104\121\117\043\086\088\110\108\086\108\053\097\103\122\110\070\104\084\048\074\112\088\053\116\115\061";"\102\113\106\088\117\070\104\075\053\119\101\061";"\056\097\072\084\053\050\100\114\077\113\051\054\117\121\061\061","\056\097\072\084\053\050\085\083\110\070\111\119";"\056\097\072\104\117\070\122\080\048\119\056\061","\056\074\051\054\110\113\088\061","\077\070\112\108\081\108\086\043\110\083\106\104";"\077\070\112\108\081\088\085\065\117\097\102\061";"\077\119\085\104\053\097\115\061","\099\070\104\118\081\083\056\061","\099\113\103\104\105\097\115\061","\102\113\106\108\053\097\080\073\117\083\067\061";"\056\113\122\122\110\074\117\104\100\112\077\052\053\097\072\104","\106\070\122\104\110\097\106\099\053\097\051\104\105\119\077\073\110\113\115\061";"\117\070\112\084\110\070\102\061","\102\113\106\065\053\097\103\088\053\097\056\114\110\119\086\088\081\097\111\075\076\114\061\061","\056\050\086\121\110\083\104\073\110\074\048\114\117\070\122\104\110\097\102\090","\099\097\111\067\081\097\053\080\106\070\122\104\110\097\102\061","\053\118\106\075\105\119\077\073\110\113\115\061","\099\097\111\067\081\097\053\080\106\070\122\104\110\097\102\114\053\118\106\075\105\119\077\073\110\113\115\114\110\074\111\088\100\070\053\054\117\097\080\067\100\070\104\075\100\112\117\073\110\074\077\054\117\121\061\061","\056\119\085\104\053\070\104\088\048\121\061\061","\077\070\104\098\105\113\111\108\053\055\052\114\050\108\080\098\117\083\085\073\117\074\106\115","\097\097\111\072\106\083\106\084\053\099\052\114\110\113\053\074\081\097\103\073\105\097\051\089\117\070\106\075\081\113\106\075";"\102\113\103\108\081\050\086\088\105\074\051\054\079\055\052\114\099\113\053\074\081\097\103\073\105\097\051\102\053\097\080\087\053\097\080\086\110\083\056\061";"\056\113\111\121\079\116\086\120\081\050\103\069\110\119\085\067\100\120\051\073\110\074\065\061","\081\083\077\088\048\083\101\090\049\108\111\067\081\050\103\069\110\119\085\067\049\074\117\118\049\072\120\072\116\104\053\088\053\119\085\108\048\106\114\061";"\056\113\111\121\079\116\086\120\081\050\103\069\110\119\085\067\100\112\103\052\110\119\085\088\100\120\051\073\110\074\065\061","\081\083\077\088\048\083\101\090\049\108\111\067\048\113\101\075\053\113\048\054\117\070\106\075\081\113\106\075\048\113\103\108\081\050\086\088\048\121\061\061","\077\113\106\088\102\113\106\108\117\074\104\069\053\056\061\061","\102\119\077\122\048\118\077\104\048\067\117\072\081\056\061\061";"\102\113\106\075\053\120\080\054\117\070\104\074\081\097\103\122\117\070\104\054\110\114\061\061";"\106\070\104\088\110\070\102\061","\116\097\080\074\110\121\061\061";"\106\070\106\115\117\082\061\061","\106\070\122\122\110\074\065\114\079\097\111\072\100\070\053\054\048\084\086\072\048\113\104\075\053\108\086\054\117\050\100\114\048\113\103\108\081\050\086\088\100\116\086\047\110\113\104\075\100\070\111\072\048\084\086\067\081\050\103\069\110\119\085\067\100\083\103\104\048\118\053\104\048\084\086\074\110\119\100\114\110\097\111\108\053\116\086\098\105\119\085\073\048\083\077\098\100\070\112\075\053\043\086\072\048\070\077\122\117\070\106\098\100\043\122\067\081\050\103\069\110\119\085\067\049\074\117\118\049\072\120\072\116\104\053\088\053\119\085\108\048\106\114\073";"\077\083\106\108\105\050\077\073\110\113\115\061";"\102\070\051\122\079\097\106\108\048\121\061\061";"\102\118\106\075\102\113\106\108\117\074\104\069\053\056\061\061";"\102\074\106\121\110\070\104\069\105\050\077\104\053\112\103\088\110\119\085\122\053\113\102\061","\099\070\104\118\081\083\077\073\110\074\048\061","\106\070\106\065\053\050\086\054\048\118\077\099\053\050\085\113\081\097\103\104","\116\083\077\088\048\112\103\104\048\118\053\073\105\113\102\061";"\077\070\106\084\048\074\104\098","\099\070\111\069\105\097\051\056\110\070\112\080\053\050\100\061";"\056\118\106\075\110\074\067\061","\077\070\106\065\117\070\120\061","\116\119\085\075\110\082\061\061";"\097\070\106\075\110\121\061\061","\097\074\106\075\081\050\077\052";"\106\070\106\075\081\113\106\075","\053\074\104\075\053\082\061\061";"";"\106\083\117\073\110\084\121\114\079\097\057\114\053\050\122\104\105\108\086\122\081\097\080\088\100\083\103\072\048\083\086\054\048\118\077\104\053\043\120\061","\117\113\112\073\117\082\061\061";"\081\083\077\088\048\083\101\090\049\108\111\098\081\050\085\073\117\050\101\075\110\097\106\075\117\116\111\108\105\050\104\074\081\097\106\065\053\082\061\061";"\099\074\112\068\053\056\061\061";"\106\070\122\104\100\112\085\122\081\113\102\114\102\074\106\068\105\050\103\088\053\050\085\104\053\043\086\099\105\119\085\073\048\083\056\061","\116\097\103\054\110\114\061\061";"\099\070\111\122\053\070\104\075\053\072\077\073\117\070\051\104";"\099\070\111\122\053\070\104\075\053\108\115\075\049\114\061\061";"\099\070\111\122\053\070\104\075\053\072\103\072\105\118\077\073\117\070\051\104";"\105\118\067\114\106\070\106\075\081\113\106\075\100\112\103\069\048\074\104\121\117\083\101\114\116\083\106\084";"\102\113\122\054\117\072\077\104\079\083\056\061","\102\074\112\080\053\074\104\104\110\070\056\061","\106\070\122\104\110\097\102\061";"\077\070\106\074\105\050\106\065\117\082\061\061","\106\070\111\118\053\113\051\104\106\102\104\049\053\050\104\084\081\097\080\067";"\116\121\061\061","\056\113\111\075\053\074\104\118\117\050\085\122\117\070\104\054\110\104\103\122\117\074\104\075\053\121\061\061","\077\097\080\122\105\074\051\104\053\082\061\061","\077\074\111\065\053\070\106\108\099\074\112\068\053\056\061\061","\106\070\106\075\081\113\106\075\102\113\103\108\081\050\086\088\048\088\122\072\105\114\061\061","\077\074\104\065\053\102\080\122\110\097\102\061";"\077\070\104\098\105\113\111\108\053\082\061\061","\116\097\080\113\081\050\077\104","\102\099\106\047\106\118\077\118\048\118\085\051\097\082\061\061","\102\074\106\068\053\097\072\084\053\050\085\047\110\113\104\075\048\121\061\061";"\116\113\106\080\102\119\104\098\117\070\106\068","\116\113\106\080\102\113\106\088\117\070\104\075\053\119\101\061";"\102\113\103\108\081\050\086\088\100\120\068\104\079\116\086\099\079\050\103\088\053\097\088\061","\102\119\106\084\117\070\104\088\110\070\102\061","\077\097\080\088\053\050\100\114\081\113\106\080\100\083\077\054\100\083\106\098\053\116\086\098\105\119\085\073\048\083\056\061";"\099\074\111\088\053\056\061\061","\116\074\111\073\110\084\086\054\117\050\100\114\053\070\104\098\105\113\111\108\053\043\086\098\053\050\085\113\053\050\100\114\053\074\111\108\100\070\068\104\079\116\082\052\053\070\104\098\105\113\111\108\053\043\080\118\053\108\111\077\103\102\073\097\117\070\117\108\048\118\112\105\047\056\061\061";"\106\070\106\075\081\113\106\075\100\120\068\104\079\116\086\099\079\050\103\088\053\097\088\061","\102\113\112\113\053\102\068\104\079\056\061\061";"\077\119\085\122\105\067\068\104\079\102\053\108\110\113\072\099\081\050\077\104";"\116\113\106\080";"\106\070\106\075\081\113\106\075\116\113\106\080";"\102\113\106\108\117\074\106\108\100\120\103\054\110\118\077\108\110\113\051\098","\102\074\106\109\110\113\104\075\100\112\103\104\048\118\053\104\048\114\061\061";"\056\113\112\065\110\070\085\122\105\113\065\061","\102\070\051\122\105\113\106\085\053\082\061\061","\116\074\111\084\116\097\056\061";"\102\113\106\108\117\074\106\108\100\120\122\054\048\082\061\061";"\081\083\077\088\048\083\101\090\049\108\111\118\105\097\072\104\048\108\080\108\110\113\085\065\110\119\114\075\105\113\111\068\049\119\105\051\049\113\117\122\110\097\106\098\049\121\061\061";"\049\119\103\104\048\118\053\104\048\118\101\054\102\083\106\084\110\070\104\069\071\119\103\054\048\118\077\071\048\074\077\104\048\069\072\086\048\113\101\074\110\070\104\068\081\050\056\111\101\099\082\121","\053\070\112\088\105\056\061\061","\048\070\051\122\079\097\104\075\053\121\061\061","\110\097\112\115\102\070\051\122\079\097\106\108\048\121\061\061","\081\097\056\061";"\081\097\080\098\053\050\085\088","\048\074\112\075\053\070\111\068";"\056\113\111\075\117\070\106\075\117\082\061\061";"\099\074\057\114\105\050\053\122\081\097\051\122\105\074\051\104\100\083\103\104\048\118\053\104\048\118\101\114\053\074\111\072\110\074\056\075";"\099\097\112\073\110\114\061\061","\056\113\112\068\053\050\085\122\099\097\112\115\097\074\111\054\110\102\077\073\048\119\077\122\110\074\103\104","\056\113\112\068\053\050\085\122\099\097\104\075\097\074\111\054\110\102\077\073\048\119\077\122\110\074\103\104";"\077\070\106\113\077\097\080\122\105\074\051\104\099\097\111\072\048\113\106\101\110\113\103\087","\077\070\106\113\056\113\111\068\048\083\106\088\053\050\085\055\105\097\072\104\048\074\112\103\110\113\077\104";"\077\070\106\113\056\113\111\068\048\083\106\088\053\050\085\055\105\097\072\104\048\074\112\103\110\119\053\104\110\097\106\075\117\120\072\054\053\070\102\061";"\106\050\103\104\048\067\103\052\110\113\104\069\053\056\061\061","\106\070\122\073\048\074\056\114\102\070\106\108\048\113\111\075\100\043\065\114\102\113\122\073\053\118\077\065\110\113\103\087","\056\119\106\108\048\074\106\075\117\112\053\122\110\083\106\104";"\077\074\051\122\053\121\061\061","\106\070\122\073\048\074\077\056\053\050\085\098\110\113\080\102\110\113\117\118\110\070\102\061";"\056\113\122\122\048\074\112\069\117\070\106\108\056\097\077\067\053\097\056\061";"\056\118\085\073\053\113\122\088\110\074\106\098\048\121\061\061";"\056\113\051\054\105\113\068\102\081\097\072\104","\077\074\111\118\077\097\080\067","\077\113\051\054\105\074\112\065\102\113\122\122\053\070\111\119\048\121\061\061","\056\097\072\084\081\097\106\075\117\082\061\061";"\099\119\106\088\053\070\111\054\048\067\112\068\105\074\104\104\110\118\056\061","\056\113\111\065\110\119\085\099\081\070\104\074\117\112\111\043\110\119\077\088\110\113\088\061";"\056\113\111\065\110\119\085\099\081\070\104\074\117\112\111\102\110\119\082\061";"\110\074\106\119","\056\050\077\068\110\119\103\121\081\070\106\108\053\056\061\061","\077\070\106\075\048\113\104\088\079\056\061\061";"\099\113\053\074\048\113\106\088","\056\113\111\065\110\119\100\061","\077\070\106\069\105\050\067\061","\077\113\051\122\048\074\102\061","\056\113\111\065\110\119\085\055\110\119\085\108\053\097\103\088\081\097\111\075\077\097\053\074\053\097\103\088";"\056\074\051\054\110\113\072\112\053\074\053\104\105\119\056\061","\102\119\106\075\102\074\112\080\048\088\106\074\053\074\106\069\117\082\061\061";"\056\074\051\072\048\067\106\074\053\074\106\069\117\082\061\061","\077\070\106\121\117\070\122\071\053\067\053\073\053\097\051\067\077\097\053\074\053\097\103\088","\077\118\106\065\110\043\086\043\048\074\104\118\081\083\056\061";"\077\118\106\065\110\120\085\108\081\097\117\052\117\112\077\054\053\113\117\065\053\056\061\061";"\102\074\106\075\053\070\106\108\102\119\077\104\048\083\086\104\053\082\061\061","\116\083\106\068\105\097\080\054\081\097\056\061";"\116\083\106\068\105\097\080\054\081\097\077\116\110\113\111\088\102\070\112\108\117\082\061\061";"\106\070\111\108\048\113\057\061";"\116\070\106\122\110\083\077\052";"\116\083\106\068\105\097\080\054\081\097\077\099\117\070\112\088\053\106\077\080\048\070\102\061","\102\118\106\075\110\074\104\075\053\121\061\061","\102\070\112\108\053\097\080\088","\106\074\106\065\110\113\103\073\117\083\067\061","\097\056\061\061";"\056\074\111\067\079\106\053\104\110\070\111\069\081\050\077\080";"\099\097\112\115\077\074\111\108\105\113\102\061","\102\082\061\061","\053\070\106\065\105\050\067\061","\102\119\077\122\117\070\106\055\081\070\112\075\053\113\106\067";"\077\118\085\104\053\097\053\122\110\070\121\061";"\116\070\106\122\048\118\077\084\053\097\112\088";"\099\070\112\075\053\070\106\067";"\116\070\106\122\110\083\077\052\056\113\122\122\110\074\117\104\053\082\061\061","\056\113\122\122\048\074\112\069\117\070\106\108";"\099\074\057\114\077\074\112\065\110\043\086\120\105\097\072\122\053\113\102\061","\077\070\104\098\105\097\085\065\053\097\056\061","\099\074\111\070\105\097\051\065\077\070\112\068\105\097\117\104\106\070\111\118\053\113\051\104";"\099\074\057\114\077\074\112\065\110\043\086\120\105\097\072\122\053\113\102\114\099\074\111\088\053\056\061\061","\106\113\122\104\110\084\086\074\105\097\051\065\081\097\080\118\049\043\086\121\110\070\106\122\048\113\102\114\053\070\057\114\110\074\111\088\100\070\122\054\110\070\056\114\105\097\080\080\100\070\068\104\079\116\086\072\110\118\077\073\110\043\086\080\110\119\102\114\105\050\085\104\100\070\111\075\100\083\077\052\053\116\086\118\048\074\111\072\110\074\056\075","\102\119\077\122\110\097\104\075\105\056\061\061";"\077\097\080\104\048\074\117\080";"\106\113\112\065\081\072\103\121\053\097\106\067","\106\074\112\065\117\097\102\061";"\099\097\112\115\106\074\112\065\117\097\102\061";"\056\050\106\088\110\108\086\099\048\083\085\073\110\118\056\061","\056\050\106\088\110\072\103\121\048\074\104\075\117\112\077\054\053\113\117\065\053\056\061\061","\099\097\104\098\105\113\106\065\110\070\112\075\053\097\111\072\048\121\061\061","\102\074\112\087\053\116\086\049\081\097\051\065\105\050\106\108\105\056\061\061";"\102\074\112\087\053\102\112\072\048\074\120\061";"\102\074\112\087\053\102\068\073\110\070\051\086\117\050\085\122";"\102\074\112\087\053\116\086\049\081\097\051\065\105\050\106\108\105\116\082\090\100\082\061\061","\116\097\072\122\053\113\102\061";"\106\113\111\108\081\119\103\121\105\097\103\104","\102\074\112\087\053\056\061\061","\102\070\111\098\081\050\077\073\110\113\115\061";"\099\097\112\118\110\074\104\088\117\097\077\104","\102\119\077\072\110\104\103\088\081\097\103\087";"\077\050\053\104\110\118\056\061","\102\121\061\061";"\116\082\061\061","\116\070\104\088\102\070\112\108\117\082\061\061","\056\118\085\073\110\074\048\114\102\113\103\108\105\050\086\098","\077\074\104\065\117\070\106\108";"\102\113\103\108\105\050\086\099\048\070\112\119\110\118\101\061","\048\113\103\108\105\050\082\061","\056\050\106\088\110\113\053\122\048\074\088\061","\106\113\122\104\110\084\086\088\110\108\086\072\048\113\102\114\117\070\122\073\048\098\057\061";"\097\097\111\072\100\070\103\122\110\084\086\072\048\113\102\114\117\070\122\073\048\108\086\088\110\108\086\074\105\050\085\068\100\070\111\113\053\050\085\075\081\097\117\052\117\043\086\098\117\050\085\113\081\050\053\122\110\083\101\065\100\070\111\108\100\083\117\052\081\097\051\104\100\083\104\054\117\116\086\122\048\074\102\114\105\050\117\122\079\116\086\074\048\074\111\068\100\070\068\104\079\097\085\054\105\050\085\067\049\114\061\061";"\077\120\106\102\077\102\103\102\116\102\111\076\050\072\085\086\099\067\117\112","\099\102\104\076\050\072\085\106\099\104\111\120\116\106\103\102\056\102\080\055\077\056\061\061";"\099\102\112\105\050\072\085\106\099\104\111\120\116\106\103\102\056\102\080\055\077\056\061\061";"\102\072\086\112\077\102\077\089\099\106\106\101\106\120\104\056\099\120\104\112\102\114\061\061","\099\102\104\076\050\072\106\056\077\120\112\102\077\106\111\120\077\102\051\086\097\056\061\061","\099\102\112\105\050\072\106\056\077\120\112\102\077\106\111\120\077\102\051\086\097\056\061\061";"\077\120\104\099\106\120\112\076\056\088\106\089\102\088\103\086\099\120\104\076\077\121\061\061";"\056\088\051\071\102\088\106\089\102\067\112\076\077\088\102\061";"\102\088\072\071\099\072\077\100\099\067\106\099\102\072\111\055\099\120\111\099\077\056\061\061";"\102\088\072\071\099\072\077\100\099\067\106\099\102\072\111\070\056\106\100\061";"\102\067\112\053\050\088\122\112\116\102\117\100\106\082\061\061","\102\067\112\053\050\088\077\112\102\112\077\100";"\056\102\051\102\077\106\085\076\056\106\077\085\106\067\106\089\099\088\053\070\102\088\106\102\102\121\061\061";"\081\050\103\086\105\119\077\073\117\074\102\061";"\105\113\111\075\110\074\106\069\117\070\104\054\110\118\101\061","\110\119\085\073\053\113\104\075\105\097\051\050\105\097\051\087\102\119\086\104\053\097\056\061","\117\070\112\108\053\113\106\088\102\070\112\108\117\082\061\061","\105\113\051\104\105\050\100\061","\102\113\106\122\117\112\086\122\048\118\056\061","\102\113\104\088";"\110\097\104\075";"\110\097\112\115";"\106\097\080\073\117\082\061\061";"\056\088\053\108\105\097\072\104";"\056\113\122\073\110\070\077\086\053\070\077\104\053\082\061\061","\056\113\122\073\110\070\077\116\053\097\072\054\117\074\106\067";"\056\097\080\088\081\116\072\116\105\097\068\104\100\120\103\052\105\050\103\104\100\043\122\086\117\050\077\054\053\074\112\108\110\116\067\061","\056\097\080\088\081\106\085\122\081\113\102\061","\116\070\111\119\100\070\104\088\100\083\117\054\048\074\068\098\071\121\061\061";"\056\097\053\088\053\050\100\114\053\097\080\122\105\074\051\104\053\043\121\114\117\070\122\104\100\083\103\069\048\074\104\121\117\043\086\119\081\097\051\065\100\070\112\072\117\070\111\068\105\050\077\073\105\113\112\065\110\083\067\114\053\070\106\088\053\097\103\088\100\083\085\122\081\113\102\114\081\097\115\114\079\043\086\098\117\083\106\067\048\108\115\114\116\097\105\114\117\070\111\054\100\070\103\065\110\119\103\104\100\070\112\075\053\043\086\098\105\119\085\073\048\083\056\114\053\097\080\122\105\074\051\104\053\043\086\088\081\070\106\075\100\083\104\054\117\116\086\119\081\097\051\065\100\070\112\072\117\070\111\068\105\050\077\073\105\113\112\065\110\083\067\114\105\074\102\114\117\083\082\114\117\070\057\114\105\116\086\098\105\097\053\104\048\084\086\067\081\050\103\088\105\097\080\069\053\116\121\114\105\097\080\067\100\083\117\052\081\097\051\104\100\070\122\104\100\070\104\098\100\070\103\054\110\097\104\075\053\108\086\088\110\119\117\122\048\074\077\098\100\083\104\054\117\116\121\114\079\097\111\072\100\083\117\073\110\070\121\114\048\113\051\054\117\113\051\080\100\083\117\122\110\070\068\122\117\113\112\080\100\083\077\054\100\070\112\113\110\113\104\067\100\070\077\080\081\097\080\118\049\114\061\061";"\077\074\051\122\048\074\102\114\077\119\106\075","\102\113\103\108\105\050\082\061","\102\119\106\121\048\070\051\080\100\120\077\108\110\119\082\061";"\053\118\085\054\110\106\085\083\056\114\061\061","\056\074\112\098\053\106\086\122\048\118\056\061","\056\074\104\065\110\070\085\054\105\050\085\067\077\119\106\073";"\102\113\104\090\053\056\061\061","\102\119\077\072\053\083\103\071\053\074\053\098\053\050\056\061","\056\097\051\119\105\050\104\098\099\113\080\102\110\119\082\061","\056\097\077\054\048\074\080\104\053\056\061\061","\106\070\106\115\117\120\051\122\105\074\106\065";"\056\074\112\069\081\113\117\108\110\119\106\075\053\112\077\108\105\097\080\098\048\070\112\108\053\097\080\069\079\056\061\061";"\106\070\106\115\117\120\103\054\110\070\111\108\101\121\061\061";"\077\074\111\075\117\082\061\061";"\102\113\111\072\048\074\103\104\102\113\112\075\048\088\085\054\110\070\056\061";"\106\070\106\115\117\112\103\069\105\097\051\104\053\082\061\061","\106\070\106\115\117\112\103\088\048\074\111\087\053\106\077\108\105\097\080\098\048\070\112\108\053\097\080\069\079\056\061\061";"\099\097\111\067\053\097\121\061";"\102\083\085\073\110\097\112\108\079\106\086\122\048\118\056\061";"\116\070\112\075\053\070\051\104","\106\070\111\054\110\082\061\061";"\116\070\104\118\081\070\051\073\053\113\122\088","\056\074\104\065\110\070\085\054\105\050\085\067","\056\113\111\075\110\114\061\061";"\077\074\104\065\110\120\103\054\110\070\111\108";"\099\119\106\088\110\070\104\075\053\102\103\054\110\070\111\108","\077\074\104\065\110\112\077\108\105\097\080\098\048\070\112\108\053\097\080\069\079\056\061\061";"\077\070\106\121\117\070\122\103\110\113\077\104";"\116\070\104\118\081\070\051\073\053\113\122\088\077\070\106\121\117\070\122\103\110\113\077\104";"\056\097\080\069\053\050\103\088\048\118\104\055\081\070\112\075\053\113\106\067","\106\083\104\121\053\056\061\061";"\116\097\080\088\106\074\112\065\117\097\102\061","\099\118\106\068\105\074\106\108\106\074\112\065\117\097\102\061";"\102\119\077\108\081\097\080\118\106\074\112\065\117\097\102\061"}local function Aw(T)return rw[T-14472]end for T,P in ipairs({{1,276},{1,229};{230;276}})do while P[1]<P[2]do rw[P[1]],rw[P[2]],P[1],P[2]=rw[P[2]],rw[P[1]],P[1]+1,P[2]-1 end end do local T=string.sub local P=rw local I=type local s=string.char local N={X=52,b=51;w=55;L=14;S=7,P=57,W=43,O=30,r=32,Y=31,R=0,t=18;B=59;Q=26;G=15,m=42;u=29;E=35;l=50;V=1,z=33,["\049"]=11;k=63;f=20;A=44,x=4,c=19;I=41,g=13;n=27;D=45,["\043"]=2,y=48,["\052"]=40;["\048"]=28,q=54,["\057"]=60,["\051"]=49,["\055"]=3;h=37,s=56;Z=58,H=53,["\050"]=23;["\053"]=25,j=21,p=5,a=22,["\047"]=10;U=9;T=34,M=17,N=62;e=12;F=6;K=46,J=38,["\054"]=47,v=39;i=24;o=61,C=36,["\056"]=16,d=8}local O=table.concat local a=string.len local Y=table.insert local f=math.floor for V=1,#P,1 do local x=P[V]if I(x)=="\115\116\114\105\110\103"then local I=a(x)local c={}local h=1 local z=0 local p=0 while h<=I do local P=T(x,h,h)local O=N[P]if O then z=z+O*64^(3-p)p=p+1 if p==4 then p=0 local T=f(z/65536)local P=f((z%65536)/256)local I=z%256 Y(c,s(T,P,I))z=0 end elseif P=="\061"then Y(c,s(f(z/65536)))if h>=I or T(x,h+1,h+1)~="\061"then Y(c,s(f((z%65536)/256)))end break end h=h+1 end P[V]=O(c)end end end local function T(T)local P=game[Aw(14473)]local I=cloneref or function(T)return T end return I(P(game,T))end if syn then(T(Aw(14474))):SetCore(Aw(14475),{[Aw(14476)]=Aw(14477);[Aw(14478)]=Aw(14479),[Aw(14480)]=5})else(T(Aw(14474))):SetCore(Aw(14475),{[Aw(14476)]=Aw(14477),[Aw(14478)]=Aw(14479);[Aw(14480)]=5})end local P=game:GetService(Aw(14481))local I=game:GetService(Aw(14482))local s=game:GetService(Aw(14483))local N=game:GetService(Aw(14484))local O=game:GetService(Aw(14485))local a=game:GetService(Aw(14486))local Y=game:GetService(Aw(14487))local f=P[Aw(14488)]local V=getexecutorname()or identifyexecutor()if V then local T={Aw(14489);Aw(14490),Aw(14491),Aw(14492);Aw(14493);Aw(14494)}local P=false for T,I in ipairs(T)do if string[Aw(14495)](V,I)then P=true break end end if P then print(Aw(14496))else game[Aw(14481)][Aw(14488)]:Kick(Aw(14497))end end local x if identifyexecutor then x=identifyexecutor()elseif getexecutorname then x=getexecutorname()end repeat task[Aw(14498)]()until f local c=(loadstring(game:HttpGet(Aw(14499))))()local h=c:CreateWindow({[Aw(14500)]=Aw(14501);[Aw(14502)]=0,[Aw(14503)]=Aw(14504),[Aw(14505)]=Aw(14506);[Aw(14507)]=Aw(14508);[Aw(14509)]=Aw(14510),[Aw(14511)]=Aw(14512);[Aw(14513)]={[Aw(14514)]=true,[Aw(14515)]=Aw(14516);[Aw(14517)]=Aw(14516)};[Aw(14518)]={[Aw(14514)]=true,[Aw(14519)]=Aw(14520);[Aw(14521)]=true},[Aw(14522)]=true,[Aw(14523)]={[Aw(14476)]=Aw(14524);[Aw(14525)]=Aw(14526),[Aw(14527)]=Aw(14528);[Aw(14517)]=Aw(14529),[Aw(14530)]=false,[Aw(14531)]=false,[Aw(14532)]={Aw(14533)}}})local z=h:CreateTab(Aw(14534))z:CreateButton({[Aw(14500)]=Aw(14535);[Aw(14536)]=function()O:TeleportToPlaceInstance(game[Aw(14537)],game[Aw(14538)],f)end})z:CreateButton({[Aw(14500)]=Aw(14539);[Aw(14536)]=function()local T={}local P,I=pcall(function()return game:HttpGet(Aw(14540)..(game[Aw(14537)]..Aw(14541)))end)if not P then return end local s=a:JSONDecode(I)if s and s[Aw(14542)]then for P,I in pairs(s[Aw(14542)])do if I[Aw(14543)]<I[Aw(14544)]and I[Aw(14545)]~=game[Aw(14538)]then table[Aw(14546)](T,I[Aw(14545)])end end end if#T>0 then O:TeleportToPlaceInstance(game[Aw(14537)],T[math[Aw(14547)](1,#T)],f)else c:Notify({[Aw(14476)]=Aw(14539),[Aw(14548)]=Aw(14549),[Aw(14480)]=3})end end})local p=h:CreateTab(Aw(14550))local o=false local function g()pcall(function()f[Aw(14551)]=.5 f[Aw(14552)]=.5 f[Aw(14553)]=false f[Aw(14554)]=Enum[Aw(14555)][Aw(14510)]end)end local function w()pcall(function()f[Aw(14552)]=.5 f[Aw(14551)]=30 f[Aw(14553)]=true f[Aw(14554)]=Enum[Aw(14555)][Aw(14556)]end)end local function e()if o then w()end end p:CreateToggle({[Aw(14500)]=Aw(14557),[Aw(14558)]=false;[Aw(14559)]=Aw(14560),[Aw(14536)]=function(T)o=T if T then w();(f:GetPropertyChangedSignal(Aw(14551))):Connect(e);(f:GetPropertyChangedSignal(Aw(14552))):Connect(e)else g()end end})f[Aw(14561)]:Connect(function()task[Aw(14498)](.5)if o then w()else g()end end)local m=false local j={}local q=false local X local function S()if q then return end q=true j[Aw(14562)]=N[Aw(14562)]j[Aw(14563)]=N[Aw(14563)]j[Aw(14564)]=N[Aw(14564)]j[Aw(14565)]=N[Aw(14565)]j[Aw(14566)]=N[Aw(14566)]j[Aw(14567)]=N[Aw(14567)]j[Aw(14568)]=N[Aw(14568)]j[Aw(14569)]=N[Aw(14569)]end local function b()pcall(function()N[Aw(14562)]=2 N[Aw(14563)]=14 N[Aw(14564)]=1000000000 N[Aw(14565)]=false N[Aw(14566)]=Color3[Aw(14570)](1,1,1)N[Aw(14567)]=Color3[Aw(14570)](1,1,1)N[Aw(14568)]=Color3[Aw(14570)](1,1,1)N[Aw(14569)]=Color3[Aw(14570)](1,1,1)end)for T,P in ipairs(N:GetChildren())do pcall(function()if P:IsA(Aw(14571))then if P[Aw(14572)]then P[Aw(14572)]=0 end if P[Aw(14573)]then P[Aw(14573)]=0 end P[Aw(14574)]=Color3[Aw(14570)](1,1,1)if P[Aw(14575)]then P[Aw(14575)]=0 end if P[Aw(14576)]then P[Aw(14576)]=0 end elseif P:IsA(Aw(14577))or P:IsA(Aw(14578))or P:IsA(Aw(14579))or P:IsA(Aw(14580))or P:IsA(Aw(14581))then if P[Aw(14514)]~=nil then P[Aw(14514)]=false end end end)end end p:CreateToggle({[Aw(14500)]=Aw(14582),[Aw(14558)]=false,[Aw(14559)]=Aw(14583);[Aw(14536)]=function(T)m=T if T then S()b()X=I[Aw(14584)]:Connect(function()if m then b()end end)else if X then X:Disconnect()X=nil end pcall(function()for T,P in pairs(j)do N[T]=P end end)end end})local R=false local d={}local function H()for T,P in ipairs(d)do pcall(function()P:Disconnect()end)end d={}end local function u(T)local P=T:FindFirstChildOfClass(Aw(14585))or T:WaitForChild(Aw(14585),5)local s=T:FindFirstChild(Aw(14586))or T:FindFirstChild(Aw(14587))if not P or not s then return end local N=P[Aw(14588)]local O=Enum[Aw(14589)][Aw(14590)]local a local function Y()if not(s and(s[Aw(14591)]and(P and P[Aw(14591)])))then return end local T=s[Aw(14592)][Aw(14593)]if T<-50 then local T=Instance[Aw(14570)](Aw(14594))T[Aw(14595)]=Vector3[Aw(14570)](0,100000,0)T[Aw(14596)]=3000 T[Aw(14592)]=Vector3[Aw(14570)](0,-30,0)T[Aw(14591)]=s task[Aw(14597)](.15,function()pcall(function()T:Destroy()end)end)end end local f=P[Aw(14598)]:Connect(function(T,s)O=s if s==Enum[Aw(14589)][Aw(14599)]then N=P[Aw(14588)]if a then pcall(function()a:Disconnect()end)end a=I[Aw(14600)]:Connect(function()if R then Y()end end)elseif s==Enum[Aw(14589)][Aw(14601)]then if a then pcall(function()a:Disconnect()end)end task[Aw(14597)](.03,function()if R and P[Aw(14588)]<N then P[Aw(14588)]=N end end)end end)local V=P[Aw(14602)]:Connect(function()if R and(O==Enum[Aw(14589)][Aw(14601)]and P[Aw(14588)]<N)then P[Aw(14588)]=N end end)table[Aw(14546)](d,f)table[Aw(14546)](d,V)end local function U()if R then return end R=true if f[Aw(14603)]then u(f[Aw(14603)])end local T=f[Aw(14561)]:Connect(function(T)task[Aw(14498)](.35)if R then u(T)end end)table[Aw(14546)](d,T)c:Notify({[Aw(14476)]=Aw(14604);[Aw(14548)]=Aw(14514);[Aw(14480)]=3})end local function t()R=false H()c:Notify({[Aw(14476)]=Aw(14604),[Aw(14548)]=Aw(14605);[Aw(14480)]=3})end p:CreateToggle({[Aw(14500)]=Aw(14604),[Aw(14558)]=false,[Aw(14559)]=Aw(14606),[Aw(14536)]=function(T)if T then U()else t()end end})local r=p:CreateParagraph({[Aw(14476)]=Aw(14607),[Aw(14548)]=Aw(14608)})local A=false local K={}local W=16 local k=30 local function G()for T,P in ipairs(K)do pcall(function()P:Disconnect()end)end K={}end local function i(T)local P=T:FindFirstChildOfClass(Aw(14585))or T:WaitForChild(Aw(14585),5)if not P then return end local s=P:FindFirstChild(Aw(14609))or P:FindFirstChild(Aw(14610))local N=I[Aw(14584)]:Connect(function()if A then if P and P[Aw(14591)]then P[Aw(14611)]=k if s then pcall(function()s[Aw(14612)]=s[Aw(14613)]or 100 end)end end else if P and P[Aw(14591)]then P[Aw(14611)]=W end end end)table[Aw(14546)](K,N)end local function J()if A then return end A=true if f[Aw(14603)]then i(f[Aw(14603)])end local T=f[Aw(14561)]:Connect(function(T)task[Aw(14498)](.2)if A then i(T)end end)table[Aw(14546)](K,T)c:Notify({[Aw(14476)]=Aw(14614);[Aw(14548)]=Aw(14514),[Aw(14480)]=3})end local function n()A=false G()if f[Aw(14603)]then local T=f[Aw(14603)]:FindFirstChildOfClass(Aw(14585))if T then T[Aw(14611)]=W end end c:Notify({[Aw(14476)]=Aw(14614),[Aw(14548)]=Aw(14605),[Aw(14480)]=3})end p:CreateToggle({[Aw(14500)]=Aw(14614),[Aw(14558)]=false;[Aw(14559)]=Aw(14615),[Aw(14536)]=function(T)if T then J()else n()end end})local Q=p:CreateSection(Aw(14616))local C=p:CreateToggle({[Aw(14500)]=Aw(14617),[Aw(14558)]=false;[Aw(14559)]=Aw(14618),[Aw(14536)]=function(P)_G[Aw(14619)]=P c:Notify({[Aw(14476)]=Aw(14617);[Aw(14548)]=Aw(14620)..tostring(_G[Aw(14619)]),[Aw(14480)]=1;[Aw(14621)]=4483362458})if _G[Aw(14619)]==true then repeat wait()pcall(function()for P,I in pairs((T(Aw(14622))):GetChildren())do if(T(Aw(14622))):FindFirstChild(Aw(14623))then if((T(Aw(14622)))[Aw(14623)][Aw(14586)][Aw(14624)]-(T(Aw(14481)))[Aw(14488)][Aw(14603)][Aw(14586)][Aw(14624)])[Aw(14625)]<300 then(T(Aw(14481)))[Aw(14488)][Aw(14603)][Aw(14626)][Aw(14627)]:FireServer(Aw(14628))wait();(T(Aw(14481)))[Aw(14488)][Aw(14603)][Aw(14626)][Aw(14627)]:FireServer(Aw(14629),workspace[Aw(14623)][Aw(14586)])end end end wait(.1)end)until _G[Aw(14619)]==false end end});(T(Aw(14482)))[Aw(14600)]:Connect(function()if AllowRunService==true then if _G[Aw(14619)]==true then pcall(function()if(T(Aw(14622))):FindFirstChild(Aw(14623))then(T(Aw(14481)))[Aw(14488)][Aw(14603)][Aw(14626)][Aw(14630)][Aw(14624)]=((T(Aw(14622))):FindFirstChild(Aw(14623)))[Aw(14586)][Aw(14624)]end end)end end end)p:CreateButton({[Aw(14500)]=Aw(14631),[Aw(14536)]=function()for P,I in pairs((T(Aw(14622)))[Aw(14632)][Aw(14633)]:GetDescendants())do if I[Aw(14500)]:lower()==Aw(14634)then I:PivotTo((T(Aw(14481)))[Aw(14488)][Aw(14603)]:GetPivot())end end end})local l=h:CreateTab(Aw(14635))local Z=l:CreateParagraph({[Aw(14476)]=Aw(14636);[Aw(14548)]=Aw(14637)})local v=game:GetService(Aw(14484))local M=game:GetService(Aw(14482))local E=game:GetService(Aw(14481))local L=game:GetService(Aw(14483))local F={[Aw(14638)]=50;[Aw(14639)]=20,[Aw(14640)]=40,[Aw(14641)]=2,[Aw(14642)]=.01,[Aw(14643)]=.05,[Aw(14644)]=200;[Aw(14645)]=10;[Aw(14646)]=.05;[Aw(14647)]=.1,[Aw(14648)]=5;[Aw(14649)]=-10;[Aw(14650)]={Vector3[Aw(14570)](5,0,5);Vector3[Aw(14570)](-5,0,5),Vector3[Aw(14570)](5,0,-5);Vector3[Aw(14570)](-5,0,-5)}}local y={[Aw(14651)]=false;[Aw(14652)]={},[Aw(14653)]=nil;[Aw(14654)]=nil}local function B()for T,P in ipairs(y[Aw(14652)])do P:Disconnect()end table[Aw(14655)](y[Aw(14652)])end local function D(T,P)local I=T+Vector3[Aw(14570)](0,F[Aw(14648)],0)local s=Vector3[Aw(14570)](0,F[Aw(14649)],0)local N=workspace:FindPartOnRayWithIgnoreList(Ray[Aw(14570)](I,s),{P[Aw(14603)]})if not N then return T end for I,N in ipairs(F[Aw(14650)])do local O=T+N local a=O+Vector3[Aw(14570)](0,F[Aw(14648)],0)local Y=workspace:FindPartOnRayWithIgnoreList(Ray[Aw(14570)](a,s),{P[Aw(14603)]})if not Y then return O end end return T+Vector3[Aw(14570)](0,2,0)end local function Tw()local T=workspace:FindFirstChild(Aw(14623))y[Aw(14654)]=T and T:FindFirstChild(Aw(14586))return y[Aw(14654)]~=nil end local function Pw(T)local P=T[Aw(14603)]if not P then return end local I=P:FindFirstChild(Aw(14586))local s=P:FindFirstChildOfClass(Aw(14585))if not(I and s)then return end if s[Aw(14656)]then s[Aw(14657)]=false task[Aw(14498)](.0001)end if not(y[Aw(14654)]and y[Aw(14654)]:IsDescendantOf(workspace))then return end local N=y[Aw(14654)][Aw(14624)]local O=I[Aw(14624)]local a=(N-O)[Aw(14625)]if a<=F[Aw(14638)]then local P=math[Aw(14658)](F[Aw(14640)],math[Aw(14659)](F[Aw(14639)],a*.75))local Y=(O-N)[Aw(14660)]local f=O+Y*P local V=D(f,T)local x=CFrame[Aw(14570)](V,N)local c=a<F[Aw(14645)]and F[Aw(14646)]or F[Aw(14647)]I[Aw(14661)]=I[Aw(14661)]:Lerp(x,c)s:MoveTo(V)local h=math[Aw(14659)](F[Aw(14642)],math[Aw(14658)](F[Aw(14643)],a/F[Aw(14644)]))task[Aw(14498)](h)end end local function Iw()local T=workspace[Aw(14662)]:Connect(function(T)if T[Aw(14500)]==Aw(14623)then task[Aw(14498)]()Tw()end end)table[Aw(14546)](y[Aw(14652)],T)workspace[Aw(14663)]:Connect(function(T)if T[Aw(14500)]==Aw(14623)then y[Aw(14654)]=nil end end)table[Aw(14546)](y[Aw(14652)],T)end local function sw(T)if y[Aw(14651)]==T then return end y[Aw(14651)]=T local P=E[Aw(14488)]if T then local T=P[Aw(14603)]and P[Aw(14603)]:FindFirstChildOfClass(Aw(14585))if T then y[Aw(14653)]=T[Aw(14611)]T[Aw(14611)]=y[Aw(14653)]*F[Aw(14641)]end Tw()Iw()local I=M[Aw(14600)]:Connect(function()if y[Aw(14651)]then Pw(P)end end)table[Aw(14546)](y[Aw(14652)],I)else B()local T=P[Aw(14603)]and P[Aw(14603)]:FindFirstChildOfClass(Aw(14585))if T and y[Aw(14653)]then T[Aw(14611)]=y[Aw(14653)]end end end local Nw=l:CreateToggle({[Aw(14500)]=Aw(14664),[Aw(14558)]=false,[Aw(14559)]=Aw(14665),[Aw(14536)]=function(T)sw(T)end})local Ow=ESPTab:CreateParagraph({[Aw(14476)]=Aw(14666);[Aw(14548)]=Aw(14667)})local aw=game:GetService(Aw(14481))local Yw=game:GetService(Aw(14622))local fw=aw[Aw(14488)]local Vw={}local xw={}local cw={Aw(14481),Aw(14623),Aw(14668);Aw(14669),Aw(14670)}local hw={[Aw(14481)]=Color3[Aw(14671)](0,255,0),[Aw(14623)]=Color3[Aw(14671)](255,0,0);[Aw(14668)]=Color3[Aw(14671)](255,165,0),[Aw(14669)]=Color3[Aw(14671)](0,191,255);[Aw(14670)]=Color3[Aw(14671)](251,255,0)}local function zw(T,P,I)if not T or not T:IsA(Aw(14672))then return nil end local s=Instance[Aw(14570)](Aw(14673))s[Aw(14674)]=UDim2[Aw(14570)](0,70,0,14)s[Aw(14675)]=Vector3[Aw(14570)](0,2.6,0)s[Aw(14676)]=true s[Aw(14677)]=T s[Aw(14591)]=T local N=Instance[Aw(14570)](Aw(14678))N[Aw(14674)]=UDim2[Aw(14570)](1,0,1,0)N[Aw(14679)]=1 N[Aw(14680)]=I N[Aw(14681)]=Enum[Aw(14681)][Aw(14682)]N[Aw(14683)]=true N[Aw(14684)]=0 N[Aw(14478)]=P or Aw(14496)N[Aw(14591)]=s return s end local function pw(T)if not T then return nil,nil end if T:IsA(Aw(14685))then local P=T[Aw(14686)]or T:FindFirstChild(Aw(14586))or T:FindFirstChild(Aw(14687))or T:FindFirstChildWhichIsA(Aw(14672))return T,P elseif T:IsA(Aw(14688))then local P=T:FindFirstChild(Aw(14687))or T:FindFirstChildWhichIsA(Aw(14672))if P then if T[Aw(14591)]and T[Aw(14591)]:IsA(Aw(14685))then local I=T[Aw(14591)]local s=I[Aw(14686)]or P return I,s else return T,P end end elseif T:IsA(Aw(14672))then local P=T:FindFirstAncestorWhichIsA(Aw(14685))if P then return P,T else return T,T end end local P=T:FindFirstAncestorWhichIsA(Aw(14685))if P then local T=P[Aw(14686)]or P:FindFirstChildWhichIsA(Aw(14672))return P,T end return nil,nil end local function ow(T)if not T then return end local P=xw[T]if not P then return end pcall(function()if P[Aw(14689)]and P[Aw(14689)][Aw(14591)]then P[Aw(14689)]:Destroy()end end)pcall(function()if P[Aw(14690)]and P[Aw(14690)][Aw(14591)]then P[Aw(14690)]:Destroy()end end)if P[Aw(14691)]then pcall(function()P[Aw(14691)]:Disconnect()end)end xw[T]=nil end local function gw(T,P,I)if not T or not P then return end local s,N=pw(T)local O=s or T if not O then return end if xw[O]then return end local a,Y=pcall(function()local I=Instance[Aw(14570)](Aw(14689))I[Aw(14677)]=s or T I[Aw(14692)]=hw[P]or Color3[Aw(14570)](1,1,1)I[Aw(14693)]=Color3[Aw(14570)](0,0,0)I[Aw(14694)]=.5 I[Aw(14695)]=Enum[Aw(14696)][Aw(14676)]if s and s:IsA(Aw(14685))then I[Aw(14591)]=s elseif T[Aw(14591)]then I[Aw(14591)]=T else I[Aw(14591)]=Yw end return I end)if not a then return end local f if N and N:IsA(Aw(14672))then f=zw(N,I or P,hw[P]or Color3[Aw(14570)](1,1,1))end local V pcall(function()V=O[Aw(14697)]:Connect(function(T,P)if not P then ow(O)end end)end)xw[O]={[Aw(14689)]=Y;[Aw(14690)]=f;[Aw(14698)]=P,[Aw(14691)]=V}end local function ww(T,P)if not T then return nil end local I,s=pcall(function()local I=T:FindFirstChild(P)if I and(I:IsA(Aw(14699))or I:IsA(Aw(14700))or I:IsA(Aw(14701)))then return I[Aw(14612)]elseif I and I[Aw(14612)]~=nil then return I[Aw(14612)]end return nil end)if I then return s end return nil end local function ew()if Vw[Aw(14481)]then for T,P in ipairs(aw:GetPlayers())do if P~=fw and P[Aw(14603)]then gw(P[Aw(14603)],Aw(14481),P[Aw(14500)])end end end if Vw[Aw(14623)]then local T=Yw:FindFirstChild(Aw(14623))if T then gw(T,Aw(14623),Aw(14623))end end if Vw[Aw(14668)]then local T={}for P,I in ipairs(Yw:GetDescendants())do if I and I[Aw(14500)]then local P=I[Aw(14500)]:lower()if I:IsA(Aw(14688))and P:find(Aw(14702))then local P=I[Aw(14591)]and(I[Aw(14591)]:IsA(Aw(14685))and I[Aw(14591)])or I if not T[P]then gw(I,Aw(14668),Aw(14668))T[P]=true end elseif I:IsA(Aw(14685))and P:find(Aw(14702))then if not T[I]then gw(I,Aw(14668),Aw(14668))T[I]=true end elseif I:IsA(Aw(14672))and P:find(Aw(14702))then local P=I:FindFirstAncestorWhichIsA(Aw(14685))or I if not T[P]then gw(P,Aw(14668),Aw(14668))T[P]=true end end end end end if Vw[Aw(14669)]then local T=Yw:FindFirstChild(Aw(14632))if T and T:FindFirstChild(Aw(14633))then for T,P in ipairs(T[Aw(14633)]:GetDescendants())do if P and P:IsA(Aw(14672))then local T=P[Aw(14500)]:lower()if T:find(Aw(14634))then local T=P:FindFirstAncestorWhichIsA(Aw(14685))or P local I=Aw(14669)local s=ww(T,Aw(14703))local N=ww(T,Aw(14704))if s or N then s=s and tostring(s)or Aw(14705)N=N and tostring(N)or Aw(14705)I=Aw(14706)..(s..(Aw(14707)..N))end gw(T,Aw(14669),I)end end end end end if Vw[Aw(14670)]then local T=Yw:FindFirstChild(Aw(14487))if T and T:FindFirstChild(Aw(14708))then for T,P in ipairs(T[Aw(14708)]:GetChildren())do if P then if P[Aw(14500)]==Aw(14709)or(P[Aw(14500)]:lower()):find(Aw(14710))or P:FindFirstChild(Aw(14711))then gw(P,Aw(14670),Aw(14670))end end end end end end local mw=h:CreateTab(Aw(14712))mw:CreateDropdown({[Aw(14500)]=Aw(14713),[Aw(14714)]=cw;[Aw(14715)]={};[Aw(14716)]=true,[Aw(14559)]=Aw(14717),[Aw(14536)]=function(T)Vw={}for T,P in ipairs(T)do Vw[P]=true end for T,P in pairs(xw)do if not Vw[P[Aw(14698)]]then ow(T)end end ew()end})aw[Aw(14718)]:Connect(function(T)T[Aw(14561)]:Connect(function()if Vw[Aw(14481)]then task[Aw(14498)](1)gw(T[Aw(14603)],Aw(14481),T[Aw(14500)])end end)end)aw[Aw(14719)]:Connect(function(T)if T and T[Aw(14603)]then ow(T[Aw(14603)])end end)Yw[Aw(14662)]:Connect(function()task[Aw(14498)](1)ew()end)local jw=l:CreateParagraph({[Aw(14476)]=Aw(14720);[Aw(14548)]=Aw(14721)})local qw=h:CreateTab(Aw(14722),nil)local Xw={[Aw(14510)]=Aw(14510);[Aw(14723)]=Aw(14724),[Aw(14725)]=Aw(14725),[Aw(14726)]=Aw(14726);[Aw(14727)]=Aw(14728),[Aw(14729)]=Aw(14729),[Aw(14730)]=Aw(14730);[Aw(14731)]=Aw(14731),[Aw(14732)]=Aw(14732)}local Sw=Aw(14510)local bw=qw:CreateDropdown({[Aw(14500)]=Aw(14733),[Aw(14714)]={Aw(14510),Aw(14723);Aw(14725),Aw(14726),Aw(14727),Aw(14729),Aw(14730),Aw(14731);Aw(14732)},[Aw(14715)]=Sw;[Aw(14559)]=Aw(14734),[Aw(14536)]=function(T)local P=type(T)==Aw(14735)and T[1]or T print(Aw(14736),P)local I=Xw[P]or P print(Aw(14737),I)if type(h[Aw(14738)])==Aw(14739)then h[Aw(14738)](I)elseif type(h[Aw(14738)])==Aw(14739)then h:ModifyTheme(I)else warn(Aw(14740))end end})local Rw=h:CreateTab(Aw(14741),null)local dw=Rw:CreateSection(Aw(14742))local Hw=Rw:CreateSection(Aw(14743))local uw=Rw:CreateSection(Aw(14744))local Uw=Rw:CreateButton({[Aw(14500)]=Aw(14745),[Aw(14536)]=function()setclipboard(Aw(14746))end})local tw=Rw:CreateButton({[Aw(14500)]=Aw(14747);[Aw(14536)]=function()setclipboard(Aw(14748))end})end)(...)
