--[[ good luck skiddy LOL --]]
do local _old_print, _old_warn = print, (warn or function() end); print = function() end; if warn then warn = function() end end; pcall(function() if type(os)=="table" and type(os.getenv)=="function" then local _old_getenv=os.getenv; os.getenv=function() return nil end end end) end
do pcall(function() if debug then debug.getinfo=nil;debug.getupvalue=nil;debug.setupvalue=nil;debug.setlocal=nil;debug.getlocal=nil;debug.getregistry=nil;debug.debug=nil end end);pcall(function() if getfenv then local e=getfenv(0);for k,v in pairs(e)do if type(v)=="function"and(k=="loadstring"or k=="load")then e[k]=function()return nil end end end end end) end
return(function(...)local YE={}for X,B in ipairs({{1;270};{1,78};{79;270}})do while B[1]<B[2]do YE[B[1]],YE[B[2]],B[1],B[2]=YE[B[2]],YE[B[1]],B[1]+1,B[2]-1 end end local function FE(X)return YE[X-48526]end do local X=type local B=table.insert local g=table.concat local I=string.len local u=YE local P=string.char local G=math.floor local c=string.sub local e={N=26;T=19;E=53;Y=58;M=11;z=48;x=3;m=28,["\057"]=17,j=44;w=9,H=16,q=49,Q=41,["\049"]=62,["\047"]=23,J=46;h=12,f=61;a=36;l=39,R=7;Z=4,P=40,["\052"]=63,v=45,I=56;o=1;D=25,["\051"]=47,i=57,["\056"]=42;["\054"]=2;g=30;t=0;F=37;S=24;["\043"]=51,C=13;p=21,B=60,b=34;X=8;V=59,u=54,K=27;e=5,r=18;c=14;k=50,W=55;n=22;d=32,["\055"]=6;U=31,["\048"]=38,G=10,L=43;["\050"]=20,s=35,O=33,A=52,y=15,["\053"]=29}for Q=1,#u,1 do local z=u[Q]if X(z)=="\115\116\114\105\110\103"then local X=I(z)local E={}local V=1 local O=0 local p=0 while V<=X do local g=c(z,V,V)local I=e[g]if I then O=O+I*64^(3-p)p=p+1 if p==4 then p=0 local X=G(O/65536)local g=G((O%65536)/256)local I=O%256 B(E,P(X,g,I))O=0 end elseif g=="\061"then B(E,P(G(O/65536)))if V>=X or c(z,V+1,V+1)~="\061"then B(E,P(G((O%65536)/256)))end break end V=V+1 end u[Q]=g(E)end end end local function X(X)local B=game[FE(48527)]local g=cloneref or function(X)return X end return g(B(game,X))end if syn then(X(FE(48528))):SetCore(FE(48529),{[FE(48530)]=FE(48531),[FE(48532)]=FE(48533);[FE(48534)]=5})else(X(FE(48528))):SetCore(FE(48529),{[FE(48530)]=FE(48531);[FE(48532)]=FE(48533),[FE(48534)]=5})end local B=game:GetService(FE(48535))local g=game:GetService(FE(48536))local I=game:GetService(FE(48537))local u=game:GetService(FE(48538))local P=game:GetService(FE(48539))local G=game:GetService(FE(48540))local c=game:GetService(FE(48541))local e=B[FE(48542)]local Q=getexecutorname()or identifyexecutor()if Q then local X={FE(48543);FE(48544);FE(48545);FE(48546),FE(48547);FE(48548)}local B=false for X,g in ipairs(X)do if string[FE(48549)](Q,g)then B=true break end end if B then print(FE(48550))else game[FE(48535)][FE(48542)]:Kick(FE(48551))end end local z if identifyexecutor then z=identifyexecutor()elseif getexecutorname then z=getexecutorname()end repeat task[FE(48552)]()until e local E=(loadstring(game:HttpGet(FE(48553))))()local V=E:CreateWindow({[FE(48554)]=FE(48555),[FE(48556)]=0,[FE(48557)]=FE(48558);[FE(48559)]=FE(48560);[FE(48561)]=FE(48562);[FE(48563)]=FE(48564);[FE(48565)]=FE(48566);[FE(48567)]={[FE(48568)]=true;[FE(48569)]=FE(48570);[FE(48571)]=FE(48570)};[FE(48572)]={[FE(48568)]=true;[FE(48573)]=FE(48574),[FE(48575)]=true};[FE(48576)]=true;[FE(48577)]={[FE(48530)]=FE(48578);[FE(48579)]=FE(48580);[FE(48581)]=FE(48582);[FE(48571)]=FE(48583);[FE(48584)]=false,[FE(48585)]=false,[FE(48586)]={FE(48587)}}})local O=V:CreateTab(FE(48588))O:CreateButton({[FE(48554)]=FE(48589),[FE(48590)]=function()P:TeleportToPlaceInstance(game[FE(48591)],game[FE(48592)],e)end})O:CreateButton({[FE(48554)]=FE(48593);[FE(48590)]=function()local X={}local B,g=pcall(function()return game:HttpGet(FE(48594)..(game[FE(48591)]..FE(48595)))end)if not B then return end local I=G:JSONDecode(g)if I and I[FE(48596)]then for B,g in pairs(I[FE(48596)])do if g[FE(48597)]<g[FE(48598)]and g[FE(48599)]~=game[FE(48592)]then table[FE(48600)](X,g[FE(48599)])end end end if#X>0 then P:TeleportToPlaceInstance(game[FE(48591)],X[math[FE(48601)](1,#X)],e)else E:Notify({[FE(48530)]=FE(48593),[FE(48602)]=FE(48603);[FE(48534)]=3})end end})local p=V:CreateTab(FE(48604))local D=false local function T()pcall(function()e[FE(48605)]=.5 e[FE(48606)]=.5 e[FE(48607)]=false e[FE(48608)]=Enum[FE(48609)][FE(48564)]end)end local function S()pcall(function()e[FE(48606)]=.5 e[FE(48605)]=30 e[FE(48607)]=true e[FE(48608)]=Enum[FE(48609)][FE(48610)]end)end local function W()if D then S()end end p:CreateToggle({[FE(48554)]=FE(48611);[FE(48612)]=false;[FE(48613)]=FE(48614),[FE(48590)]=function(X)D=X if X then S();(e:GetPropertyChangedSignal(FE(48605))):Connect(W);(e:GetPropertyChangedSignal(FE(48606))):Connect(W)else T()end end})e[FE(48615)]:Connect(function()task[FE(48552)](.5)if D then S()else T()end end)local f=false local s={}local q=false local J local function U()if q then return end q=true s[FE(48616)]=u[FE(48616)]s[FE(48617)]=u[FE(48617)]s[FE(48618)]=u[FE(48618)]s[FE(48619)]=u[FE(48619)]s[FE(48620)]=u[FE(48620)]s[FE(48621)]=u[FE(48621)]s[FE(48622)]=u[FE(48622)]s[FE(48623)]=u[FE(48623)]end local function r()pcall(function()u[FE(48616)]=2 u[FE(48617)]=14 u[FE(48618)]=1000000000 u[FE(48619)]=false u[FE(48620)]=Color3[FE(48624)](1,1,1)u[FE(48621)]=Color3[FE(48624)](1,1,1)u[FE(48622)]=Color3[FE(48624)](1,1,1)u[FE(48623)]=Color3[FE(48624)](1,1,1)end)for X,B in ipairs(u:GetChildren())do pcall(function()if B:IsA(FE(48625))then if B[FE(48626)]then B[FE(48626)]=0 end if B[FE(48627)]then B[FE(48627)]=0 end B[FE(48628)]=Color3[FE(48624)](1,1,1)if B[FE(48629)]then B[FE(48629)]=0 end if B[FE(48630)]then B[FE(48630)]=0 end elseif B:IsA(FE(48631))or B:IsA(FE(48632))or B:IsA(FE(48633))or B:IsA(FE(48634))or B:IsA(FE(48635))then if B[FE(48568)]~=nil then B[FE(48568)]=false end end end)end end p:CreateToggle({[FE(48554)]=FE(48636),[FE(48612)]=false,[FE(48613)]=FE(48637);[FE(48590)]=function(X)f=X if X then U()r()J=g[FE(48638)]:Connect(function()if f then r()end end)else if J then J:Disconnect()J=nil end pcall(function()for X,B in pairs(s)do u[X]=B end end)end end})local Z=false local k={}local function w()for X,B in ipairs(k)do pcall(function()B:Disconnect()end)end k={}end local function Y(X)local B=X:FindFirstChildOfClass(FE(48639))or X:WaitForChild(FE(48639),5)local I=X:FindFirstChild(FE(48640))or X:FindFirstChild(FE(48641))if not B or not I then return end local u=B[FE(48642)]local P=Enum[FE(48643)][FE(48644)]local G local function c()if not(I and(I[FE(48645)]and(B and B[FE(48645)])))then return end local X=I[FE(48646)][FE(48647)]if X<-50 then local X=Instance[FE(48624)](FE(48648))X[FE(48649)]=Vector3[FE(48624)](0,100000,0)X[FE(48650)]=3000 X[FE(48646)]=Vector3[FE(48624)](0,-30,0)X[FE(48645)]=I task[FE(48651)](.15,function()pcall(function()X:Destroy()end)end)end end local e=B[FE(48652)]:Connect(function(X,I)P=I if I==Enum[FE(48643)][FE(48653)]then u=B[FE(48642)]if G then pcall(function()G:Disconnect()end)end G=g[FE(48654)]:Connect(function()if Z then c()end end)elseif I==Enum[FE(48643)][FE(48655)]then if G then pcall(function()G:Disconnect()end)end task[FE(48651)](.03,function()if Z and B[FE(48642)]<u then B[FE(48642)]=u end end)end end)local Q=B[FE(48656)]:Connect(function()if Z and(P==Enum[FE(48643)][FE(48655)]and B[FE(48642)]<u)then B[FE(48642)]=u end end)table[FE(48600)](k,e)table[FE(48600)](k,Q)end local function F()if Z then return end Z=true if e[FE(48657)]then Y(e[FE(48657)])end local X=e[FE(48615)]:Connect(function(X)task[FE(48552)](.35)if Z then Y(X)end end)table[FE(48600)](k,X)E:Notify({[FE(48530)]=FE(48658),[FE(48602)]=FE(48568);[FE(48534)]=3})end local function N()Z=false w()E:Notify({[FE(48530)]=FE(48658);[FE(48602)]=FE(48659),[FE(48534)]=3})end p:CreateToggle({[FE(48554)]=FE(48658);[FE(48612)]=false;[FE(48613)]=FE(48660);[FE(48590)]=function(X)if X then F()else N()end end})local i=p:CreateParagraph({[FE(48530)]=FE(48661);[FE(48602)]=FE(48662)})local h=false local d={}local K=16 local m=30 local function b()for X,B in ipairs(d)do pcall(function()B:Disconnect()end)end d={}end local function v(X)local B=X:FindFirstChildOfClass(FE(48639))or X:WaitForChild(FE(48639),5)if not B then return end local I=B:FindFirstChild(FE(48663))or B:FindFirstChild(FE(48664))local u=g[FE(48638)]:Connect(function()if h then if B and B[FE(48645)]then B[FE(48665)]=m if I then pcall(function()I[FE(48666)]=I[FE(48667)]or 100 end)end end else if B and B[FE(48645)]then B[FE(48665)]=K end end end)table[FE(48600)](d,u)end local function t()if h then return end h=true if e[FE(48657)]then v(e[FE(48657)])end local X=e[FE(48615)]:Connect(function(X)task[FE(48552)](.2)if h then v(X)end end)table[FE(48600)](d,X)E:Notify({[FE(48530)]=FE(48668);[FE(48602)]=FE(48568);[FE(48534)]=3})end local function y()h=false b()if e[FE(48657)]then local X=e[FE(48657)]:FindFirstChildOfClass(FE(48639))if X then X[FE(48665)]=K end end E:Notify({[FE(48530)]=FE(48668);[FE(48602)]=FE(48659),[FE(48534)]=3})end p:CreateToggle({[FE(48554)]=FE(48668),[FE(48612)]=false,[FE(48613)]=FE(48669),[FE(48590)]=function(X)if X then t()else y()end end})local a=p:CreateSection(FE(48670))local H=p:CreateToggle({[FE(48554)]=FE(48671);[FE(48612)]=false;[FE(48613)]=FE(48672);[FE(48590)]=function(B)_G[FE(48673)]=B E:Notify({[FE(48530)]=FE(48671),[FE(48602)]=FE(48674)..tostring(_G[FE(48673)]);[FE(48534)]=1;[FE(48675)]=4483362458})if _G[FE(48673)]==true then repeat wait()pcall(function()for B,g in pairs((X(FE(48676))):GetChildren())do if(X(FE(48676))):FindFirstChild(FE(48677))then if((X(FE(48676)))[FE(48677)][FE(48640)][FE(48678)]-(X(FE(48535)))[FE(48542)][FE(48657)][FE(48640)][FE(48678)])[FE(48679)]<300 then(X(FE(48535)))[FE(48542)][FE(48657)][FE(48680)][FE(48681)]:FireServer(FE(48682))wait();(X(FE(48535)))[FE(48542)][FE(48657)][FE(48680)][FE(48681)]:FireServer(FE(48683),workspace[FE(48677)][FE(48640)])end end end wait(.1)end)until _G[FE(48673)]==false end end});(X(FE(48536)))[FE(48654)]:Connect(function()if AllowRunService==true then if _G[FE(48673)]==true then pcall(function()if(X(FE(48676))):FindFirstChild(FE(48677))then(X(FE(48535)))[FE(48542)][FE(48657)][FE(48680)][FE(48684)][FE(48678)]=((X(FE(48676))):FindFirstChild(FE(48677)))[FE(48640)][FE(48678)]end end)end end end)p:CreateButton({[FE(48554)]=FE(48685);[FE(48590)]=function()for B,g in pairs((X(FE(48676)))[FE(48686)][FE(48687)]:GetDescendants())do if g[FE(48554)]:lower()==FE(48688)then g:PivotTo((X(FE(48535)))[FE(48542)][FE(48657)]:GetPivot())end end end})local o=V:CreateTab(FE(48689))local n=game:GetService(FE(48538))local l=game:GetService(FE(48536))local R=game:GetService(FE(48535))local j=game:GetService(FE(48537))local A={[FE(48690)]=50;[FE(48691)]=20,[FE(48692)]=40,[FE(48693)]=2,[FE(48694)]=.01;[FE(48695)]=.05,[FE(48696)]=200;[FE(48697)]=10;[FE(48698)]=.05;[FE(48699)]=.1,[FE(48700)]=5,[FE(48701)]=-10;[FE(48702)]={Vector3[FE(48624)](5,0,5);Vector3[FE(48624)](-5,0,5),Vector3[FE(48624)](5,0,-5);Vector3[FE(48624)](-5,0,-5)}}local M={[FE(48703)]=false,[FE(48704)]={};[FE(48705)]=nil;[FE(48706)]=nil}local function C()for X,B in ipairs(M[FE(48704)])do B:Disconnect()end table[FE(48707)](M[FE(48704)])end local function L(X,B)local g=X+Vector3[FE(48624)](0,A[FE(48700)],0)local I=Vector3[FE(48624)](0,A[FE(48701)],0)local u=workspace:FindPartOnRayWithIgnoreList(Ray[FE(48624)](g,I),{B[FE(48657)]})if not u then return X end for g,u in ipairs(A[FE(48702)])do local P=X+u local G=P+Vector3[FE(48624)](0,A[FE(48700)],0)local c=workspace:FindPartOnRayWithIgnoreList(Ray[FE(48624)](G,I),{B[FE(48657)]})if not c then return P end end return X+Vector3[FE(48624)](0,2,0)end local function x()local X=workspace:FindFirstChild(FE(48677))M[FE(48706)]=X and X:FindFirstChild(FE(48640))return M[FE(48706)]~=nil end local function XE(X)local B=X[FE(48657)]if not B then return end local g=B:FindFirstChild(FE(48640))local I=B:FindFirstChildOfClass(FE(48639))if not(g and I)then return end if I[FE(48708)]then I[FE(48709)]=false task[FE(48552)](.0001)end if not(M[FE(48706)]and M[FE(48706)]:IsDescendantOf(workspace))then return end local u=M[FE(48706)][FE(48678)]local P=g[FE(48678)]local G=(u-P)[FE(48679)]if G<=A[FE(48690)]then local B=math[FE(48710)](A[FE(48692)],math[FE(48711)](A[FE(48691)],G*.75))local c=(P-u)[FE(48712)]local e=P+c*B local Q=L(e,X)local z=CFrame[FE(48624)](Q,u)local E=G<A[FE(48697)]and A[FE(48698)]or A[FE(48699)]g[FE(48713)]=g[FE(48713)]:Lerp(z,E)I:MoveTo(Q)local V=math[FE(48711)](A[FE(48694)],math[FE(48710)](A[FE(48695)],G/A[FE(48696)]))task[FE(48552)](V)end end local function BE()local X=workspace[FE(48714)]:Connect(function(X)if X[FE(48554)]==FE(48677)then task[FE(48552)]()x()end end)table[FE(48600)](M[FE(48704)],X)workspace[FE(48715)]:Connect(function(X)if X[FE(48554)]==FE(48677)then M[FE(48706)]=nil end end)table[FE(48600)](M[FE(48704)],X)end local function gE(X)if M[FE(48703)]==X then return end M[FE(48703)]=X local B=R[FE(48542)]if X then local X=B[FE(48657)]and B[FE(48657)]:FindFirstChildOfClass(FE(48639))if X then M[FE(48705)]=X[FE(48665)]X[FE(48665)]=M[FE(48705)]*A[FE(48693)]end x()BE()local g=l[FE(48654)]:Connect(function()if M[FE(48703)]then XE(B)end end)table[FE(48600)](M[FE(48704)],g)else C()local X=B[FE(48657)]and B[FE(48657)]:FindFirstChildOfClass(FE(48639))if X and M[FE(48705)]then X[FE(48665)]=M[FE(48705)]end end end local IE=o:CreateToggle({[FE(48554)]=FE(48716);[FE(48612)]=false,[FE(48613)]=FE(48717),[FE(48590)]=function(X)gE(X)end})local uE=game:GetService(FE(48535))local PE=game:GetService(FE(48676))local GE=uE[FE(48542)]local cE={}local eE={}local QE={FE(48535);FE(48677),FE(48718);FE(48719),FE(48720)}local zE={[FE(48535)]=Color3[FE(48721)](0,255,0),[FE(48677)]=Color3[FE(48721)](255,0,0);[FE(48718)]=Color3[FE(48721)](255,165,0),[FE(48719)]=Color3[FE(48721)](0,191,255);[FE(48720)]=Color3[FE(48721)](251,255,0)}local function EE(X,B,g)if not X or not X:IsA(FE(48722))then return nil end local I=Instance[FE(48624)](FE(48723))I[FE(48724)]=UDim2[FE(48624)](0,70,0,14)I[FE(48725)]=Vector3[FE(48624)](0,2.6,0)I[FE(48726)]=true I[FE(48727)]=X I[FE(48645)]=X local u=Instance[FE(48624)](FE(48728))u[FE(48724)]=UDim2[FE(48624)](1,0,1,0)u[FE(48729)]=1 u[FE(48730)]=g u[FE(48731)]=Enum[FE(48731)][FE(48732)]u[FE(48733)]=true u[FE(48734)]=0 u[FE(48532)]=B or FE(48550)u[FE(48645)]=I return I end local function VE(X)if not X then return nil,nil end if X:IsA(FE(48735))then local B=X[FE(48736)]or X:FindFirstChild(FE(48640))or X:FindFirstChild(FE(48737))or X:FindFirstChildWhichIsA(FE(48722))return X,B elseif X:IsA(FE(48738))then local B=X:FindFirstChild(FE(48737))or X:FindFirstChildWhichIsA(FE(48722))if B then if X[FE(48645)]and X[FE(48645)]:IsA(FE(48735))then local g=X[FE(48645)]local I=g[FE(48736)]or B return g,I else return X,B end end elseif X:IsA(FE(48722))then local B=X:FindFirstAncestorWhichIsA(FE(48735))if B then return B,X else return X,X end end local B=X:FindFirstAncestorWhichIsA(FE(48735))if B then local X=B[FE(48736)]or B:FindFirstChildWhichIsA(FE(48722))return B,X end return nil,nil end local function OE(X)if not X then return end local B=eE[X]if not B then return end pcall(function()if B[FE(48739)]and B[FE(48739)][FE(48645)]then B[FE(48739)]:Destroy()end end)pcall(function()if B[FE(48740)]and B[FE(48740)][FE(48645)]then B[FE(48740)]:Destroy()end end)if B[FE(48741)]then pcall(function()B[FE(48741)]:Disconnect()end)end eE[X]=nil end local function pE(X,B,g)if not X or not B then return end local I,u=VE(X)local P=I or X if not P then return end if eE[P]then return end local G,c=pcall(function()local g=Instance[FE(48624)](FE(48739))g[FE(48727)]=I or X g[FE(48742)]=zE[B]or Color3[FE(48624)](1,1,1)g[FE(48743)]=Color3[FE(48624)](0,0,0)g[FE(48744)]=.5 g[FE(48745)]=Enum[FE(48746)][FE(48726)]if I and I:IsA(FE(48735))then g[FE(48645)]=I elseif X[FE(48645)]then g[FE(48645)]=X else g[FE(48645)]=PE end return g end)if not G then return end local e if u and u:IsA(FE(48722))then e=EE(u,g or B,zE[B]or Color3[FE(48624)](1,1,1))end local Q pcall(function()Q=P[FE(48747)]:Connect(function(X,B)if not B then OE(P)end end)end)eE[P]={[FE(48739)]=c;[FE(48740)]=e;[FE(48748)]=B;[FE(48741)]=Q}end local function DE(X,B)if not X then return nil end local g,I=pcall(function()local g=X:FindFirstChild(B)if g and(g:IsA(FE(48749))or g:IsA(FE(48750))or g:IsA(FE(48751)))then return g[FE(48666)]elseif g and g[FE(48666)]~=nil then return g[FE(48666)]end return nil end)if g then return I end return nil end local function TE()if cE[FE(48535)]then for X,B in ipairs(uE:GetPlayers())do if B~=GE and B[FE(48657)]then pE(B[FE(48657)],FE(48535),B[FE(48554)])end end end if cE[FE(48677)]then local X=PE:FindFirstChild(FE(48677))if X then pE(X,FE(48677),FE(48677))end end if cE[FE(48718)]then local X={}for B,g in ipairs(PE:GetDescendants())do if g and g[FE(48554)]then local B=g[FE(48554)]:lower()if g:IsA(FE(48738))and B:find(FE(48752))then local B=g[FE(48645)]and(g[FE(48645)]:IsA(FE(48735))and g[FE(48645)])or g if not X[B]then pE(g,FE(48718),FE(48718))X[B]=true end elseif g:IsA(FE(48735))and B:find(FE(48752))then if not X[g]then pE(g,FE(48718),FE(48718))X[g]=true end elseif g:IsA(FE(48722))and B:find(FE(48752))then local B=g:FindFirstAncestorWhichIsA(FE(48735))or g if not X[B]then pE(B,FE(48718),FE(48718))X[B]=true end end end end end if cE[FE(48719)]then local X=PE:FindFirstChild(FE(48686))if X and X:FindFirstChild(FE(48687))then for X,B in ipairs(X[FE(48687)]:GetDescendants())do if B and B:IsA(FE(48722))then local X=B[FE(48554)]:lower()if X:find(FE(48688))then local X=B:FindFirstAncestorWhichIsA(FE(48735))or B local g=FE(48719)local I=DE(X,FE(48753))local u=DE(X,FE(48754))if I or u then I=I and tostring(I)or FE(48755)u=u and tostring(u)or FE(48755)g=FE(48756)..(I..(FE(48757)..u))end pE(X,FE(48719),g)end end end end end if cE[FE(48720)]then local X=PE:FindFirstChild(FE(48541))if X and X:FindFirstChild(FE(48758))then for X,B in ipairs(X[FE(48758)]:GetChildren())do if B then if B[FE(48554)]==FE(48759)or(B[FE(48554)]:lower()):find(FE(48760))or B:FindFirstChild(FE(48761))then pE(B,FE(48720),FE(48720))end end end end end end local SE=V:CreateTab(FE(48762))SE:CreateDropdown({[FE(48554)]=FE(48763);[FE(48764)]=QE;[FE(48765)]={};[FE(48766)]=true,[FE(48613)]=FE(48767);[FE(48590)]=function(X)cE={}for X,B in ipairs(X)do cE[B]=true end for X,B in pairs(eE)do if not cE[B[FE(48748)]]then OE(X)end end TE()end})uE[FE(48768)]:Connect(function(X)X[FE(48615)]:Connect(function()if cE[FE(48535)]then task[FE(48552)](1)pE(X[FE(48657)],FE(48535),X[FE(48554)])end end)end)uE[FE(48769)]:Connect(function(X)if X and X[FE(48657)]then OE(X[FE(48657)])end end)PE[FE(48714)]:Connect(function()task[FE(48552)](1)TE()end)local WE=V:CreateTab(FE(48770),nil)local fE={[FE(48564)]=FE(48564),[FE(48771)]=FE(48772),[FE(48773)]=FE(48773),[FE(48774)]=FE(48774),[FE(48775)]=FE(48776);[FE(48777)]=FE(48777);[FE(48778)]=FE(48778),[FE(48779)]=FE(48779);[FE(48780)]=FE(48780)}local sE=FE(48564)local qE=WE:CreateDropdown({[FE(48554)]=FE(48781),[FE(48764)]={FE(48564);FE(48771),FE(48773),FE(48774);FE(48775),FE(48777);FE(48778);FE(48779);FE(48780)},[FE(48765)]=sE;[FE(48613)]=FE(48782),[FE(48590)]=function(X)local B=type(X)==FE(48783)and X[1]or X print(FE(48784),B)local g=fE[B]or B print(FE(48785),g)if type(V[FE(48786)])==FE(48787)then V[FE(48786)](g)elseif type(V[FE(48786)])==FE(48787)then V:ModifyTheme(g)else warn(FE(48788))end end})local JE=V:CreateTab(FE(48789),nil)local UE=JE:CreateSection(FE(48790))local rE=JE:CreateSection(FE(48791))local ZE=JE:CreateSection(FE(48792))local kE=JE:CreateButton({[FE(48554)]=FE(48793),[FE(48590)]=function()setclipboard(FE(48794))end})local wE=JE:CreateButton({[FE(48554)]=FE(48795);[FE(48590)]=function()setclipboard(FE(48796))end})end)(...)
